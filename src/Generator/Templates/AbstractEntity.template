<?php declare(strict_types=1);

/*
 * Copyright (c) {{ comment.copyright }}
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace {{ class.namespace }};

use {{ orm.namespace }}\AbstractEntity;
use {{ orm.namespace }}\RepositoryInterface;
use {{ orm.namespace }}\Exception\OrmException;
use Eureka\Component\Validation\ValidatorFactoryInterface;
use Eureka\Component\Validation\ValidatorEntityFactoryInterface;
{{ entity.uses }}

/**
 * Abstract {{ class.name }} data class.
 *
 * /!\ AUTO GENERATED FILE. DO NOT EDIT THIS FILE.
 * You can add your specific code in child class: {{ class.name }}
 *
 * @author {{ comment.author }}
 */
abstract class Abstract{{ class.name }} extends AbstractEntity
{
{{ class.properties }}
    /**
     * AbstractEntity constructor.
     *
     * @param RepositoryInterface $repository
     * @param ValidatorFactoryInterface|null $validatorFactory
     * @param ValidatorEntityFactoryInterface|null $validatorEntityFactory
     */
    public function __construct(
        RepositoryInterface $repository,
        ?ValidatorFactoryInterface $validatorFactory = null,
        ?ValidatorEntityFactoryInterface $validatorEntityFactory = null
    ) {
        $this->setRepository($repository);
        $this->setValidatorFactories($validatorFactory, $validatorEntityFactory);
    }

    /**
     * Get cache key
     *
     * @return string
     */
    public function getCacheKey(): string
    {
        return '{{ cache.key.prefix }}' . $this->getId();
    }
{{ method.getters }}
{{ method.setters }}
{{ method.joins }}
}
